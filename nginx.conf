# Nginx配置文件 for Live Source Manager
# 专门用于提供M3U/TXT文件服务
# 增强内容:
# - 修复端口配置一致性
# - 增强安全头设置
# - 改进性能配置

user www-data;
# 或者使用 root;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # 基本设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # 上传文件大小限制
    client_max_body_size 10m;
    
    # M3U文件类型定义
    types {
        application/vnd.apple.mpegurl m3u m3u8;
        audio/x-mpegurl m3u m3u8;
    }
    
    # 主服务器配置 - 关键修复：端口配置
    server {
        listen 12345 default_server;  # 容器内部端口，与Dockerfile EXPOSE一致
        listen [::]:12345 default_server;
        server_name _;
        
        # 根目录设置
        root /www/output;
        index index.html index.htm;
        
        # 安全头 - 增强安全配置
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'none'; style-src 'self' 'unsafe-inline'" always;
        
        # CORS设置 - 允许跨域访问M3U文件
        location ~* \.(m3u|m3u8|txt)$ {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range" always;
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
            
            # 缓存设置
            expires 5m;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            
            # 应用速率限制
            limit_req zone=api burst=20 nodelay;
            
            # 文件找不到时返回空M3U而不是404
            try_files $uri =404;
        }
        
        # 默认文件处理
        location / {
            # 尝试提供文件，如果找不到则显示目录列表
            try_files $uri $uri/ =404;
            
            # 目录列表设置
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            
            # 目录列表的CSS样式
            add_header Content-Type text/html;
        }
        
        # 健康检查端点
        location /health {
            access_log off;
            default_type text/plain;
            return 200 "healthy\n";
        }
        
        # 状态页面
        location /status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.0.0.0/8;
            allow 10.0.0.0/8;
            deny all;
        }
        
        # 禁止访问隐藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # 限制请求速率（防止滥用）
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # 上游服务器配置（如果有后端API的话）
    upstream backend {
        server 127.0.0.1:8080;
        keepalive 32;
    }
}